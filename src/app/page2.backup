"use client"
import { AutoComplete } from "./_components/ui/AutoComplete";
import { useEffect, useState } from "react";
import { SchoolModel } from "./_components/ui/SchoolModel";
import { getSearchEvent } from "./_data-access/SearchEvent";

interface EventData {
  eventType: string;
  time: string;
  title: string;
  description: string;
  school: string;
  cityState: string;
  location: string;
}

export default  function HomePage() {
  const [selectedSchool, setSelectedSchool] = useState<string>("");
  const [selectedLocation, setSelectedLocation] = useState<string>("");
  const [events, setEvents] = useState([]);

  useEffect(() => {
    async function fetchEvents() {
      if (!selectedSchool || !selectedLocation) return; // Don't fetch if either value is not set

      const response = await fetch(`/api/events?school=${encodeURIComponent(selectedSchool)}&location=${encodeURIComponent(selectedLocation)}`);
      if (!response.ok) {
        console.error("Failed to fetch events");
        return;
      }

      const data = await response.json();
      setEvents(data); // Assuming the API returns an array of events
    }

    fetchEvents();
  }, [selectedSchool, selectedLocation]); 

  return (
    <main className="flex min-h-screen flex-col items-center  bg-gradient-to-b from-[#2e026d] to-[#15162c] text-white">
      <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
        <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
          Whats<span className="text-[hsl(280,100%,70%)]">The</span>Word?
        </h1>
        <div>
          <AutoComplete
            onPlaceSubmit={(cityState: string) => {
              setSelectedLocation(cityState);
            }}
          />
          <input type="hidden" name="cityState" value={selectedLocation}/>
        <div>
          <SchoolModel
            onSchoolSelect={(school: string) => {
              setSelectedSchool(school);
            }}
          />
          <input type="hidden" name="school" value={selectedSchool}/>
        </div>
        </div>
      </div>
      <div>
        <h1>Events:</h1>
        {events.map((event, index) => (
          <div key={index}>
            {/* Render your event data here */}
            <p>{event.title}</p>
          </div>
        ))}
      </div>
    </main>
  );
}
